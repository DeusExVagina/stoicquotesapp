{"ast":null,"code":"\"use strict\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar Clipboard = function (_React$Component) {\n  _inherits(Clipboard, _React$Component);\n\n  function Clipboard() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Clipboard);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call.apply(_ref, [this].concat(args))), _this), _this.handleCopy = function (e) {\n      _this.props.onCopy(e);\n    }, _this.handleKeyDown = function (e) {\n      var metaKeyIsDown = e.ctrlKey || e.metaKey;\n      var textIsSelected = window.getSelection().toString();\n\n      if (!metaKeyIsDown || textIsSelected) {\n        return;\n      }\n\n      var element = ReactDOM.findDOMNode(_this);\n      element.focus();\n      element.select();\n    }, _this.handleKeyUp = function (e) {\n      var element = ReactDOM.findDOMNode(_this);\n      element.blur();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Clipboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"keydown\", this.handleKeyDown, false);\n      document.addEventListener(\"keyup\", this.handleKeyUp, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this.handleKeyDown, false);\n      document.removeEventListener(\"keyup\", this.handleKeyUp, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"textarea\", _extends({}, this.props, {\n        readOnly: true,\n        onCopy: this.handleCopy\n      }));\n    }\n  }]);\n\n  return Clipboard;\n}(React.Component);\n\nClipboard.propTypes = {\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  onCopy: PropTypes.func\n};\nClipboard.defaultProps = {\n  className: \"clipboard\",\n  style: {\n    position: \"fixed\",\n    overflow: \"hidden\",\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    width: 1,\n    margin: -1,\n    padding: 0,\n    border: 0\n  },\n  onCopy: function onCopy() {} // noop\n\n};\n;\nmodule.exports = Clipboard;","map":null,"metadata":{},"sourceType":"script"}