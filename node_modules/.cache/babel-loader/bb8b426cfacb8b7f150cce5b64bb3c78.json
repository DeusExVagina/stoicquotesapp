{"ast":null,"code":"var _jsxFileName = \"C:\\\\GIT\\\\stoicquotesapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css'; //From: https://codepen.io/zebapy/pen/LGjyWJ\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGetNameClick = e => {};\n\n    this.state = {\n      quotes: {},\n      quote: '',\n      author: '',\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/DeusExVagina/stoicquotesapp/master/JSONFIles/quotes.json\").then(response => response.json()).then(data => {\n      this.setState({\n        quotes: data.quotes\n      });\n    });\n  }\n\n  componentDidUpdate() {}\n\n  _randomAll() {\n    var quote = '';\n    var quote = getQuote(this.state.quotes);\n    this.setState({\n      quote: this.state.quote\n    });\n  }\n\n  render() {\n    const quote = this.state.quote;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Stoic Quote Generator\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.quote), React.createElement(\"div\", {\n      className: \"m-y\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-random\",\n      onClick: this._randomAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Generate random stoic quote\")), React.createElement(\"small\", {\n      className: \"randomize-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Like this thing?\"), React.createElement(Button, {\n      name: \"firstName\",\n      onClick: \"https://keypressingmonkey.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"My Website\"), React.createElement(Button, {\n      name: \"lastNamePrefix\",\n      onClick: \"https://www.youtube.com/channel/UCMdFN7FUC4HilpDBEw0uvJw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"My Youtube\"));\n  }\n\n}\n\nfunction getRandom(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\n\nfunction spinText(inputString) {\n  //copied from: https://ctrlq.org/code/20277-javascript-spintax\n  var matches, options, random;\n  var regEx = new RegExp(/{([^{}]+?)}/);\n\n  while ((matches = regEx.exec(inputString)) !== null) {\n    options = matches[1].split(\"|\");\n    random = Math.floor(Math.random() * options.length);\n    inputString = inputString.replace(matches[0], options[random]);\n  }\n\n  return inputString;\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst Button = ({\n  name,\n  onClick,\n  children\n}) => {\n  return React.createElement(\"form\", {\n    method: \"get\",\n    action: onClick,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"btn btn-randomize-namepart\",\n    type: \"submit\",\n    name: name,\n    value: children,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n};\n\nfunction getQuote(quotes) {\n  var quote = '';\n  quote = getRandom(quotes);\n  return quote;\n}","map":{"version":3,"sources":["C:/GIT/stoicquotesapp/src/App.js"],"names":["React","Component","ReactDOM","App","constructor","props","handleGetNameClick","e","state","quotes","quote","author","count","componentDidMount","fetch","then","response","json","data","setState","componentDidUpdate","_randomAll","getQuote","render","bind","getRandom","items","Math","floor","random","length","spinText","inputString","matches","options","regEx","RegExp","exec","split","replace","getRandomInt","max","Button","name","onClick","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\n//From: https://codepen.io/zebapy/pen/LGjyWJ\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: {},\n      quote: '',\n      author: '',\n\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/DeusExVagina/stoicquotesapp/master/JSONFIles/quotes.json\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          quotes: data.quotes\n        });\n      });      \n  }\n  componentDidUpdate() {\n  }\n\n  _randomAll() {\n    var quote = '';    \n    var quote = getQuote(this.state.quotes);\n    this.setState({\n      quote: this.state.quote\n    })\n  };\n\n  handleGetNameClick = (e) => {\n\n  };\n\n  render() {\n    const { quote} = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"name\">\n          <div>\n            <span className=\"firstname\">Stoic Quote Generator</span>\n            <br />\n          </div>\n\n        </div>\n        <p>{this.state.quote}</p>\n        <div className=\"m-y\">\n          <button className=\"btn btn-random\" onClick={this._randomAll.bind(this)}>Generate random stoic quote</button>\n        </div>\n        <small className=\"randomize-note\">Like this thing?</small>\n        <Button name=\"firstName\" onClick=\"https://keypressingmonkey.com\">My Website</Button>\n        <Button name=\"lastNamePrefix\" onClick=\"https://www.youtube.com/channel/UCMdFN7FUC4HilpDBEw0uvJw\">My Youtube</Button>\n      </div>\n    )\n  };\n}\n\nfunction getRandom(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\nfunction spinText(inputString) {\n  //copied from: https://ctrlq.org/code/20277-javascript-spintax\n\n  var matches, options, random;\n\n  var regEx = new RegExp(/{([^{}]+?)}/);\n\n  while ((matches = regEx.exec(inputString)) !== null) {\n    options = matches[1].split(\"|\");\n    random = Math.floor(Math.random() * options.length);\n    inputString = inputString.replace(matches[0], options[random]);\n  }\n  return inputString;\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst Button = ({ name, onClick, children }) => {\n  return (\n    <form method=\"get\" action={onClick} target=\"_blank\">\n      <input className=\"btn btn-randomize-namepart\" type=\"submit\" name={name} value={children} /></form>\n  )\n}\n\nfunction getQuote(quotes) {\n  var quote = '';\n  quote = getRandom(quotes)\n  return quote;\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}