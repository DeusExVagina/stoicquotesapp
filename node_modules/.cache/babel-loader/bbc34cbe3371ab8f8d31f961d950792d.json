{"ast":null,"code":"var _jsxFileName = \"c:\\\\GIT\\\\sexscenegenerator\\\\sexscenegenerator\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-uikit-button'; //From: https://codepen.io/zebapy/pen/LGjyWJ\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGetNameClick = e => {};\n\n    this.state = {\n      sexactions: {},\n      sexaction: '',\n      lastNamePrefix: '',\n      lastNameSuffix: '',\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/DeusExVagina/b0f24adb48ee0c6929f8d29e663fbb28/raw/793103cb63803d9fec469069926df8667a629dee/sexactions.json\").then(response => response.json()).then(data => {\n      this.setState({\n        sexactions: data.lines\n      });\n    });\n  }\n\n  componentDidUpdate() {}\n\n  _randomAll() {\n    this.setState({\n      sexaction: this.state.sexactions[5].line\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          sexaction = _this$state.sexaction,\n          lastNamePrefix = _this$state.lastNamePrefix,\n          lastNameSuffix = _this$state.lastNameSuffix;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Random Title\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, sexaction), React.createElement(\"div\", {\n      className: \"m-y\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-random\",\n      onClick: this._randomAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Give me all the juicy details\")), React.createElement(\"small\", {\n      className: \"randomize-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Randomize a value\"), React.createElement(Button, {\n      name: \"firstName\",\n      onClick: \"https://patreon.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"First name\"), React.createElement(Button, {\n      name: \"lastNamePrefix\",\n      onClick: \"{this.handleGetNameClick}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Last name prefix\"), React.createElement(Button, {\n      name: \"lastNameSuffix\",\n      onClick: \"{this.handleGetNameClick}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Last name suffix\"));\n  }\n\n}\n\nfunction getRandom(items) {\n  console.log(\"length of items passed to random function: \" + items.length);\n  return items[Math.floor(Math.random() * items.length)];\n}","map":{"version":3,"sources":["c:/GIT/sexscenegenerator/sexscenegenerator/src/App.js"],"names":["React","Component","Button","App","constructor","props","handleGetNameClick","e","state","sexactions","sexaction","lastNamePrefix","lastNameSuffix","count","componentDidMount","fetch","then","response","json","data","setState","lines","componentDidUpdate","_randomAll","line","render","bind","getRandom","items","console","log","length","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-uikit-button'\n\n//From: https://codepen.io/zebapy/pen/LGjyWJ\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      sexactions: {},\n      sexaction: '',\n      lastNamePrefix: '',\n      lastNameSuffix: '',\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://gist.githubusercontent.com/DeusExVagina/b0f24adb48ee0c6929f8d29e663fbb28/raw/793103cb63803d9fec469069926df8667a629dee/sexactions.json\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          sexactions: data.lines\n        });\n\n      });\n  }\n  componentDidUpdate(){\n  }\n\n  _randomAll() {\n\n    this.setState({\n      sexaction: this.state.sexactions[5].line\n    })\n  };\n\n  handleGetNameClick = (e) => {\n\n  };\n\n  render() {\n    const { sexaction, lastNamePrefix, lastNameSuffix } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"name\">\n          <div>\n            <span className=\"firstname\">Random Title</span>\n            <br />            \n          </div>\n          \n        </div>\n        <p>{sexaction}</p>\n        <div className=\"m-y\">\n          <button className=\"btn btn-random\" onClick={this._randomAll.bind(this)}>Give me all the juicy details</button>\n        </div>\n        <small className=\"randomize-note\">Randomize a value</small>\n        <Button name=\"firstName\" onClick=\"https://patreon.com\">First name</Button>\n        <Button name=\"lastNamePrefix\" onClick=\"{this.handleGetNameClick}\">Last name prefix</Button>\n        <Button name=\"lastNameSuffix\" onClick=\"{this.handleGetNameClick}\">Last name suffix</Button>\n      </div>\n    )\n  };\n}\n\nfunction getRandom(items) {\n  console.log(\"length of items passed to random function: \" + items.length)\n  return items[Math.floor(Math.random() * items.length)];\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}